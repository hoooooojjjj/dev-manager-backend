services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: dev-manager-mysql-dev
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
    ports:
      - "${DB_PORT}:3306"
    volumes:
      - mysql_dev_data:/var/lib/mysql
    networks:
      - dev-manager-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-p${DB_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # NestJS Application (Development with Hot Reload)
  app:
    build:
      context: ..
      dockerfile: docker/Dockerfile.dev
    container_name: dev-manager-backend-dev
    restart: unless-stopped
    environment:
      DB_HOST: mysql
      DB_PORT: 3306
      DB_USERNAME: root
      DB_PASSWORD: ${DB_PASSWORD}
      DB_DATABASE: ${DB_DATABASE}
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
    ports:
      - "3333:3333"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - dev-manager-network
    volumes:
      - ../src:/app/src
      - ../package.json:/app/package.json
      - ../tsconfig.json:/app/tsconfig.json
      - ../tsconfig.build.json:/app/tsconfig.build.json
      - /app/node_modules

volumes:
  mysql_dev_data:
    driver: local

networks:
  dev-manager-network:
    driver: bridge
